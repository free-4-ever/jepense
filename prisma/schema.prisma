// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(uuid())
  // id     Int     @id @default(autoincrement())
  username      String  @unique
  // roleId        Int
  name          String?
  passwordHash  String
  userAuthToken String  @unique

  // role  Role   @relation(fields: [roleId], references: [id])
  posts Post[]
}

// enum Role {
//   USER
//   ADMIN
// }
// model Role {
//   id   Int    @id @default(autoincrement())
//   name String @unique
//   User User[]
// }

model Post {
  id        Int      @id @default(autoincrement())
  userId    String
  title     String
  slug      String
  content   String
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories Category[]
  comments   Comment[]
  tags       Tag[]
  votes      Vote[]
  user       User       @relation(fields: [userId], references: [id])
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

model Comment {
  // id       Int    @id @default(autoincrement())
  postId    Int
  name      String
  email     String   @unique
  content   String
  approved  Boolean  @default(false)
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]
}

model Message {
  id      Int    @id @default(autoincrement())
  name    String
  email   String
  content String
}

model Vote {
  postId Int
  ip     String
  value  Int
  post   Post   @relation(fields: [postId], references: [id])

  @@unique([ip, postId])
}

model Great {
  id Int @id @default(autoincrement())
  name  String
  quotes Quote[]
}

model Quote {
  id Int @id @default(autoincrement())
  greatId Int
  body String
  great Great @relation(fields: [greatId], references: [id])
}